{
  "service": {
    "service": "serverless-capstone-app",
    "serviceObject": {
      "name": "serverless-capstone-app"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "apiGateway": {
        "minimumCompressionSize": 1024,
        "shouldStartNameWithService": true
      },
      "environment": {
        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
        "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
        "POSTS_TABLE": "Posts-t-dev",
        "POSTS_CREATED_AT_INDEX": "CreatedAtIndex",
        "ATTACHMENT_S3_BUCKET": "aws-serverless-guups--posts-images-dev",
        "SIGNED_URL_EXPIRATION": "3000",
        "AUTH0_SECRET": "lLi8-6u87Pv1KArg4kwEG6_iZA4rL74TnBzpmZSyo-iJmX212zyoyUte7dNwCr7t"
      },
      "lambdaHashingVersion": "20201221",
      "stage": "dev",
      "region": "sa-east-1",
      "tracing": {
        "lambda": true,
        "apiGateway": true
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "codedeploy:*"
          ],
          "Resource": [
            "*"
          ]
        }
      ],
      "logs": {
        "restApi": {
          "format": "{\"requestTime\":\"$context.requestTime\",\"requestId\":\"$context.requestId\",\"apiId\":\"$context.apiId\",\"resourceId\":\"$context.resourceId\",\"resourcePath\":\"$context.resourcePath\",\"path\":\"$context.path\",\"httpMethod\":\"$context.httpMethod\",\"status\":\"$context.status\",\"authLatency\":\"$context.authorizer.integrationLatency\",\"integrationLatency\":\"$context.integrationLatency\",\"integrationStatus\":\"$context.integrationStatus\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"errorMessage\":\"$context.error.message\",\"format\":\"SLS_ACCESS_LOG\",\"version\":\"1.0.0\"}"
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "AuthLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-capstone-app-dev-auth"
            }
          },
          "GetPostsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-capstone-app-dev-getPosts"
            }
          },
          "CreatePostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-capstone-app-dev-createPost"
            }
          },
          "UpdatePostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-capstone-app-dev-updatePost"
            }
          },
          "DeletePostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-capstone-app-dev-deletePost"
            }
          },
          "GenerateUploadUrlLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-capstone-app-dev-generateUploadUrl"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-capstone-app",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-capstone-app-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-capstone-app-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords"
                        ],
                        "Resource": [
                          "*"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-capstone-app",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "arn:aws:iam::802587217904:root"
                    },
                    "Action": "sts:AssumeRole",
                    "Condition": {
                      "StringEquals": {
                        "sts:ExternalId": "ServerlessEnterprise-ce8db805-f85f-4ceb-bdd4-fda2d3c7b992"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "LogFilterAccess",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:FilterLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "AuthLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetPostsLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreatePostLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "UpdatePostLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "DeletePostLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GenerateUploadUrlLogGroup",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "AuthLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-capstone-app/dev/1640224442111-2021-12-23T01:54:02.111Z/serverless-capstone-app-dev-auth.zip"
              },
              "Handler": "s_auth.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "serverless-capstone-app-dev-auth",
              "MemorySize": 1024,
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "PassThrough"
              },
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                  "POSTS_TABLE": "Posts-t-dev",
                  "POSTS_CREATED_AT_INDEX": "CreatedAtIndex",
                  "ATTACHMENT_S3_BUCKET": "aws-serverless-guups--posts-images-dev",
                  "SIGNED_URL_EXPIRATION": "3000",
                  "AUTH0_SECRET": "lLi8-6u87Pv1KArg4kwEG6_iZA4rL74TnBzpmZSyo-iJmX212zyoyUte7dNwCr7t"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AuthLogGroup"
            ]
          },
          "GetPostsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-capstone-app/dev/1640224442111-2021-12-23T01:54:02.111Z/serverless-capstone-app-dev-getPosts.zip"
              },
              "Handler": "s_getPosts.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "serverless-capstone-app-dev-getPosts",
              "MemorySize": 1024,
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "PassThrough"
              },
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                  "POSTS_TABLE": "Posts-t-dev",
                  "POSTS_CREATED_AT_INDEX": "CreatedAtIndex",
                  "ATTACHMENT_S3_BUCKET": "aws-serverless-guups--posts-images-dev",
                  "SIGNED_URL_EXPIRATION": "3000",
                  "AUTH0_SECRET": "lLi8-6u87Pv1KArg4kwEG6_iZA4rL74TnBzpmZSyo-iJmX212zyoyUte7dNwCr7t"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "GetPostsIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetPostsIamRoleLambdaExecution",
              "GetPostsLogGroup"
            ]
          },
          "CreatePostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-capstone-app/dev/1640224442111-2021-12-23T01:54:02.111Z/serverless-capstone-app-dev-createPost.zip"
              },
              "Handler": "s_createPost.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "serverless-capstone-app-dev-createPost",
              "MemorySize": 1024,
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "PassThrough"
              },
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                  "POSTS_TABLE": "Posts-t-dev",
                  "POSTS_CREATED_AT_INDEX": "CreatedAtIndex",
                  "ATTACHMENT_S3_BUCKET": "aws-serverless-guups--posts-images-dev",
                  "SIGNED_URL_EXPIRATION": "3000",
                  "AUTH0_SECRET": "lLi8-6u87Pv1KArg4kwEG6_iZA4rL74TnBzpmZSyo-iJmX212zyoyUte7dNwCr7t"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "CreatePostIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreatePostIamRoleLambdaExecution",
              "CreatePostLogGroup"
            ]
          },
          "UpdatePostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-capstone-app/dev/1640224442111-2021-12-23T01:54:02.111Z/serverless-capstone-app-dev-updatePost.zip"
              },
              "Handler": "s_updatePost.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "serverless-capstone-app-dev-updatePost",
              "MemorySize": 1024,
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "PassThrough"
              },
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                  "POSTS_TABLE": "Posts-t-dev",
                  "POSTS_CREATED_AT_INDEX": "CreatedAtIndex",
                  "ATTACHMENT_S3_BUCKET": "aws-serverless-guups--posts-images-dev",
                  "SIGNED_URL_EXPIRATION": "3000",
                  "AUTH0_SECRET": "lLi8-6u87Pv1KArg4kwEG6_iZA4rL74TnBzpmZSyo-iJmX212zyoyUte7dNwCr7t"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "UpdatePostIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdatePostIamRoleLambdaExecution",
              "UpdatePostLogGroup"
            ]
          },
          "DeletePostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-capstone-app/dev/1640224442111-2021-12-23T01:54:02.111Z/serverless-capstone-app-dev-deletePost.zip"
              },
              "Handler": "s_deletePost.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "serverless-capstone-app-dev-deletePost",
              "MemorySize": 1024,
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "PassThrough"
              },
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                  "POSTS_TABLE": "Posts-t-dev",
                  "POSTS_CREATED_AT_INDEX": "CreatedAtIndex",
                  "ATTACHMENT_S3_BUCKET": "aws-serverless-guups--posts-images-dev",
                  "SIGNED_URL_EXPIRATION": "3000",
                  "AUTH0_SECRET": "lLi8-6u87Pv1KArg4kwEG6_iZA4rL74TnBzpmZSyo-iJmX212zyoyUte7dNwCr7t"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "DeletePostIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeletePostIamRoleLambdaExecution",
              "DeletePostLogGroup"
            ]
          },
          "GenerateUploadUrlLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-capstone-app/dev/1640224442111-2021-12-23T01:54:02.111Z/serverless-capstone-app-dev-generateUploadUrl.zip"
              },
              "Handler": "s_generateUploadUrl.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "serverless-capstone-app-dev-generateUploadUrl",
              "MemorySize": 1024,
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "PassThrough"
              },
              "Environment": {
                "Variables": {
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
                  "POSTS_TABLE": "Posts-t-dev",
                  "POSTS_CREATED_AT_INDEX": "CreatedAtIndex",
                  "ATTACHMENT_S3_BUCKET": "aws-serverless-guups--posts-images-dev",
                  "SIGNED_URL_EXPIRATION": "3000",
                  "AUTH0_SECRET": "lLi8-6u87Pv1KArg4kwEG6_iZA4rL74TnBzpmZSyo-iJmX212zyoyUte7dNwCr7t"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "GenerateUploadUrlIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GenerateUploadUrlIamRoleLambdaExecution",
              "GenerateUploadUrlLogGroup"
            ]
          },
          "AuthLambdaVersioncwYGPrikbL7pC8JtkTvoKZvtR1EAnFsjVf9lTgQCR6A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthLambdaFunction"
              },
              "CodeSha256": "PcWcK52cc2do/iMPmJQSf3nm8aITWjcGznIG8SJBX58="
            }
          },
          "GetPostsLambdaVersionCRy6GmVul1DSWIJVI25zNdfQi1swXo8TitXEDuAQos": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetPostsLambdaFunction"
              },
              "CodeSha256": "BRnywSxCuS6BIuvSnH29HQu5MPG9QR042AST1JpXu+k="
            }
          },
          "CreatePostLambdaVersioniEfBm6AyRipVt8fUCHJSlpfRgMZc8cym6gEJwhQWM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreatePostLambdaFunction"
              },
              "CodeSha256": "vEhRYNzI/xs2O55S/mSeAms2gkoIpGrg1W1B6wzLdV0="
            }
          },
          "UpdatePostLambdaVersionCB7f1BeILdC0qBnUaP6SQjBF8dCZ75W8bLIavQZoAo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdatePostLambdaFunction"
              },
              "CodeSha256": "Kn0yU9PWi4gfIGihFvK4V+31riEDQ0afJMyUGTyEpmA="
            }
          },
          "DeletePostLambdaVersioniYAEyrAq7dssha6ZRzPg1WY2pxqnVsqQhY1oZqr3gM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeletePostLambdaFunction"
              },
              "CodeSha256": "NdDuwofn+6+sedChjT6oMCSpQWE6SmdhgFg84mAE7AM="
            }
          },
          "GenerateUploadUrlLambdaVersionr0Pgqxcc1AwU06NAri35ZDOWsvyQrsLD6UkgetuZ0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GenerateUploadUrlLambdaFunction"
              },
              "CodeSha256": "bX745+9k71c65ELxY+eIJJZvZEDcmWbzLF6wq3YmvEI="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "serverless-capstone-app-dev",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": "",
              "MinimumCompressionSize": 1024
            }
          },
          "ApiGatewayResourcePosts": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "posts",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePostsPostidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePosts"
              },
              "PathPart": "{postId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePostsPostidVarAttachment": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePostsPostidVar"
              },
              "PathPart": "attachment",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPostsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePosts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPostsPostidVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostsPostidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPostsPostidVarAttachmentOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostsPostidVarAttachment"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPostsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePosts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "AuthApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetPostsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "AuthApiGatewayAuthorizer"
          },
          "ApiGatewayMethodPostsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePosts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "AuthApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreatePostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayServerlesscapstoneappRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodPostsPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": "AuthApiGatewayAuthorizer"
          },
          "ApiGatewayMethodPostsPostidVarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostsPostidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "AuthApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdatePostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayServerlesscapstoneappRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodPostsPostidVarPatchApplicationJsonModel"
                }
              }
            },
            "DependsOn": "AuthApiGatewayAuthorizer"
          },
          "ApiGatewayMethodPostsPostidVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostsPostidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "AuthApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeletePostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "AuthApiGatewayAuthorizer"
          },
          "ApiGatewayMethodPostsPostidVarAttachmentPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostsPostidVarAttachment"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "AuthApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GenerateUploadUrlLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "AuthApiGatewayAuthorizer"
          },
          "ApiGatewayServerlesscapstoneappRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "serverless-capstone-app-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayMethodPostsPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ContentType": "application/json",
              "Schema": {
                "title": "create post",
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "title",
                  "description"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodPostsPostidVarPatchApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ContentType": "application/json",
              "Schema": {
                "title": "update post",
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "description"
                ],
                "additionalProperties": false
              }
            }
          },
          "AuthApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "IdentitySource": "method.request.header.Authorization",
              "Name": "auth",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizerUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "AuthLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              },
              "Type": "TOKEN"
            }
          },
          "ApiGatewayDeployment1640224431291": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodPostsOptions",
              "ApiGatewayMethodPostsPostidVarOptions",
              "ApiGatewayMethodPostsPostidVarAttachmentOptions",
              "ApiGatewayMethodPostsGet",
              "ApiGatewayMethodPostsPost",
              "ApiGatewayMethodPostsPostidVarPatch",
              "ApiGatewayMethodPostsPostidVarDelete",
              "ApiGatewayMethodPostsPostidVarAttachmentPost"
            ]
          },
          "GetPostsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetPostsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AuthLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuthLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreatePostLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreatePostLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdatePostLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdatePostLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeletePostLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeletePostLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GenerateUploadUrlLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GenerateUploadUrlLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApiGatewayLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/api-gateway/serverless-capstone-app-dev"
            }
          },
          "CustomApiGatewayAccountCloudWatchRole": {
            "Type": "Custom::ApiGatewayAccountRole",
            "Version": 1,
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashapigwDashcwDashroleLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "serverless-capstone-app",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "iam:",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "role/*"
                            ]
                          ]
                        },
                        "Action": [
                          "iam:AttachRolePolicy",
                          "iam:CreateRole",
                          "iam:ListAttachedRolePolicies",
                          "iam:PassRole"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "apigateway:*::/account"
                            ]
                          ]
                        },
                        "Action": [
                          "apigateway:GET",
                          "apigateway:PATCH"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-capstone-app/dev/1640224442111-2021-12-23T01:54:02.111Z/custom-resources.zip"
              },
              "FunctionName": "serverless-capstone-app-dev-custom-resource-apigw-cw-role",
              "Handler": "apiGatewayCloudWatchRole/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs12.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution"
            ]
          },
          "GetPostsIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-capstone-app",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-capstone-app-dev-getPosts:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Scan",
                          "dynamodb:Query"
                        ],
                        "Resource": "arn:aws:dynamodb:sa-east-1:*:table/Posts-t-dev"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Query"
                        ],
                        "Resource": "arn:aws:dynamodb:sa-east-1:*:table/Posts-t-dev/index/CreatedAtIndex"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-capstone-app",
                    "dev",
                    "getPosts",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "CreatePostIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-capstone-app",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-capstone-app-dev-createPost:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem"
                        ],
                        "Resource": "arn:aws:dynamodb:sa-east-1:*:table/Posts-t-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-capstone-app",
                    "dev",
                    "createPost",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "UpdatePostIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-capstone-app",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-capstone-app-dev-updatePost:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Update*"
                        ],
                        "Resource": "arn:aws:dynamodb:sa-east-1:*:table/Posts-t-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-capstone-app",
                    "dev",
                    "updatePost",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "DeletePostIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-capstone-app",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-capstone-app-dev-deletePost:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Delete*"
                        ],
                        "Resource": "arn:aws:dynamodb:sa-east-1:*:table/Posts-t-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-capstone-app",
                    "dev",
                    "deletePost",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "GenerateUploadUrlIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-capstone-app",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-capstone-app-dev-generateUploadUrl:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetItem",
                          "dynamodb:Update*"
                        ],
                        "Resource": "arn:aws:dynamodb:sa-east-1:*:table/Posts-t-dev"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:PutObject",
                          "s3:GetObject"
                        ],
                        "Resource": "arn:aws:s3:::aws-serverless-guups--posts-images-dev/*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-capstone-app",
                    "dev",
                    "generateUploadUrl",
                    {
                      "Ref": "AWS::Region"
                    }
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "RequestBodyValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "Name": "request-body-validator",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": false
            }
          },
          "PostsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Posts-t-dev",
              "AttributeDefinitions": [
                {
                  "AttributeName": "postId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "userId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "createdAt",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "userId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "postId",
                  "KeyType": "RANGE"
                }
              ],
              "LocalSecondaryIndexes": [
                {
                  "IndexName": "CreatedAtIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "userId",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "createdAt",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "AttachmentsBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "aws-serverless-guups--posts-images-dev",
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "*"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST",
                      "DELETE",
                      "HEAD"
                    ],
                    "MaxAge": 3000
                  }
                ]
              }
            }
          },
          "BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "AttachmentsBucket"
              },
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "PublicReadForGetBucketObjects",
                    "Action": "s3:GetObject",
                    "Effect": "Allow",
                    "Resource": "arn:aws:s3:::aws-serverless-guups--posts-images-dev/*",
                    "Principal": "*"
                  }
                ]
              }
            }
          },
          "CWLSubFilterAuthLogGroupSaEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:sa-east-1:802587217904:destination:ce8db805-f85f-4ceb-bdd4-fda2d3c7b992#fc5FMphLB7rC2LmxVn#serverless-capstone-app#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "AuthLogGroup"
              }
            }
          },
          "CWLSubFilterGetPostsLogGroupSaEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:sa-east-1:802587217904:destination:ce8db805-f85f-4ceb-bdd4-fda2d3c7b992#fc5FMphLB7rC2LmxVn#serverless-capstone-app#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetPostsLogGroup"
              }
            }
          },
          "CWLSubFilterCreatePostLogGroupSaEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:sa-east-1:802587217904:destination:ce8db805-f85f-4ceb-bdd4-fda2d3c7b992#fc5FMphLB7rC2LmxVn#serverless-capstone-app#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreatePostLogGroup"
              }
            }
          },
          "CWLSubFilterUpdatePostLogGroupSaEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:sa-east-1:802587217904:destination:ce8db805-f85f-4ceb-bdd4-fda2d3c7b992#fc5FMphLB7rC2LmxVn#serverless-capstone-app#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "UpdatePostLogGroup"
              }
            }
          },
          "CWLSubFilterDeletePostLogGroupSaEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:sa-east-1:802587217904:destination:ce8db805-f85f-4ceb-bdd4-fda2d3c7b992#fc5FMphLB7rC2LmxVn#serverless-capstone-app#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "DeletePostLogGroup"
              }
            }
          },
          "CWLSubFilterGenerateUploadUrlLogGroupSaEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:sa-east-1:802587217904:destination:ce8db805-f85f-4ceb-bdd4-fda2d3c7b992#fc5FMphLB7rC2LmxVn#serverless-capstone-app#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GenerateUploadUrlLogGroup"
              }
            }
          },
          "CWLSubFilterApiGatewayLogGroupSaEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:sa-east-1:802587217904:destination:ce8db805-f85f-4ceb-bdd4-fda2d3c7b992#fc5FMphLB7rC2LmxVn#serverless-capstone-app#dev",
              "FilterPattern": "\"SLS_ACCESS_LOG\"",
              "LogGroupName": {
                "Ref": "ApiGatewayLogGroup"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-serverless-capstone-app-dev-ServerlessDeploymentBucketName"
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Value": {
              "Fn::GetAtt": [
                "EnterpriseLogAccessIamRole",
                "Arn"
              ]
            },
            "Export": {
              "Name": "sls-serverless-capstone-app-dev-EnterpriseLogAccessIamRole"
            }
          },
          "AuthLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthLambdaVersioncwYGPrikbL7pC8JtkTvoKZvtR1EAnFsjVf9lTgQCR6A"
            },
            "Export": {
              "Name": "sls-serverless-capstone-app-dev-AuthLambdaFunctionQualifiedArn"
            }
          },
          "GetPostsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetPostsLambdaVersionCRy6GmVul1DSWIJVI25zNdfQi1swXo8TitXEDuAQos"
            },
            "Export": {
              "Name": "sls-serverless-capstone-app-dev-GetPostsLambdaFunctionQualifiedArn"
            }
          },
          "CreatePostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreatePostLambdaVersioniEfBm6AyRipVt8fUCHJSlpfRgMZc8cym6gEJwhQWM"
            },
            "Export": {
              "Name": "sls-serverless-capstone-app-dev-CreatePostLambdaFunctionQualifiedArn"
            }
          },
          "UpdatePostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdatePostLambdaVersionCB7f1BeILdC0qBnUaP6SQjBF8dCZ75W8bLIavQZoAo"
            },
            "Export": {
              "Name": "sls-serverless-capstone-app-dev-UpdatePostLambdaFunctionQualifiedArn"
            }
          },
          "DeletePostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeletePostLambdaVersioniYAEyrAq7dssha6ZRzPg1WY2pxqnVsqQhY1oZqr3gM"
            },
            "Export": {
              "Name": "sls-serverless-capstone-app-dev-DeletePostLambdaFunctionQualifiedArn"
            }
          },
          "GenerateUploadUrlLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GenerateUploadUrlLambdaVersionr0Pgqxcc1AwU06NAri35ZDOWsvyQrsLD6UkgetuZ0"
            },
            "Export": {
              "Name": "sls-serverless-capstone-app-dev-GenerateUploadUrlLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-serverless-capstone-app-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "esbuild": {
        "bundle": true,
        "minify": false,
        "sourcemap": true,
        "exclude": [
          "aws-sdk"
        ],
        "target": "node14",
        "define": {},
        "platform": "node",
        "concurrency": 10
      }
    },
    "plugins": [
      "serverless-esbuild",
      "serverless-plugin-canary-deployments",
      "serverless-iam-roles-per-function",
      "serverless-plugin-tracing"
    ],
    "pluginsData": {},
    "functions": {
      "auth": {
        "handler": "s_auth.handler",
        "events": [],
        "name": "serverless-capstone-app-dev-auth",
        "package": {
          "artifact": "/Users/kelvinflores/Udacity/Cloud Developer/projects/serverles-project/backend/.serverless/serverless-capstone-app-dev-auth.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "AuthLambdaVersioncwYGPrikbL7pC8JtkTvoKZvtR1EAnFsjVf9lTgQCR6A"
      },
      "getPosts": {
        "handler": "s_getPosts.handler",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "posts",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "auth",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthLambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetPostsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetPostsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "name": "serverless-capstone-app-dev-getPosts",
        "package": {
          "artifact": "/Users/kelvinflores/Udacity/Cloud Developer/projects/serverles-project/backend/.serverless/serverless-capstone-app-dev-getPosts.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "GetPostsLambdaVersionCRy6GmVul1DSWIJVI25zNdfQi1swXo8TitXEDuAQos"
      },
      "createPost": {
        "handler": "s_createPost.handler",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "posts",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "auth",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthLambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "request": {
                "schema": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodPostsPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreatePostIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "serverless-capstone-app-dev-createPost",
        "package": {
          "artifact": "/Users/kelvinflores/Udacity/Cloud Developer/projects/serverles-project/backend/.serverless/serverless-capstone-app-dev-createPost.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "CreatePostLambdaVersioniEfBm6AyRipVt8fUCHJSlpfRgMZc8cym6gEJwhQWM"
      },
      "updatePost": {
        "handler": "s_updatePost.handler",
        "events": [
          {
            "http": {
              "method": "patch",
              "path": "posts/{postId}",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "auth",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthLambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "request": {
                "schema": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodPostsPostidVarPatchApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatementsInherit": true,
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdatePostIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "name": "serverless-capstone-app-dev-updatePost",
        "package": {
          "artifact": "/Users/kelvinflores/Udacity/Cloud Developer/projects/serverles-project/backend/.serverless/serverless-capstone-app-dev-updatePost.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "UpdatePostLambdaVersionCB7f1BeILdC0qBnUaP6SQjBF8dCZ75W8bLIavQZoAo"
      },
      "deletePost": {
        "handler": "s_deletePost.handler",
        "events": [
          {
            "http": {
              "method": "delete",
              "path": "posts/{postId}",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "auth",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthLambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeletePostIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "serverless-capstone-app-dev-deletePost",
        "package": {
          "artifact": "/Users/kelvinflores/Udacity/Cloud Developer/projects/serverles-project/backend/.serverless/serverless-capstone-app-dev-deletePost.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "DeletePostLambdaVersioniYAEyrAq7dssha6ZRzPg1WY2pxqnVsqQhY1oZqr3gM"
      },
      "generateUploadUrl": {
        "handler": "s_generateUploadUrl.handler",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "posts/{postId}/attachment",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "auth",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthLambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GenerateUploadUrlIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GenerateUploadUrlIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "name": "serverless-capstone-app-dev-generateUploadUrl",
        "package": {
          "artifact": "/Users/kelvinflores/Udacity/Cloud Developer/projects/serverles-project/backend/.serverless/serverless-capstone-app-dev-generateUploadUrl.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {},
        "versionLogicalId": "GenerateUploadUrlLambdaVersionr0Pgqxcc1AwU06NAri35ZDOWsvyQrsLD6UkgetuZ0"
      }
    },
    "resources": {
      "Resources": {
        "RequestBodyValidator": {
          "Type": "AWS::ApiGateway::RequestValidator",
          "Properties": {
            "Name": "request-body-validator",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ValidateRequestBody": true,
            "ValidateRequestParameters": false
          }
        },
        "PostsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Posts-t-dev",
            "AttributeDefinitions": [
              {
                "AttributeName": "postId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "userId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "createdAt",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "postId",
                "KeyType": "RANGE"
              }
            ],
            "LocalSecondaryIndexes": [
              {
                "IndexName": "CreatedAtIndex",
                "KeySchema": [
                  {
                    "AttributeName": "userId",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "createdAt",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "AttachmentsBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "aws-serverless-guups--posts-images-dev",
            "CorsConfiguration": {
              "CorsRules": [
                {
                  "AllowedOrigins": [
                    "*"
                  ],
                  "AllowedHeaders": [
                    "*"
                  ],
                  "AllowedMethods": [
                    "GET",
                    "PUT",
                    "POST",
                    "DELETE",
                    "HEAD"
                  ],
                  "MaxAge": 3000
                }
              ]
            }
          }
        },
        "BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "AttachmentsBucket"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadForGetBucketObjects",
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Resource": "arn:aws:s3:::aws-serverless-guups--posts-images-dev/*",
                  "Principal": "*"
                }
              ]
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.ts",
    "initialServerlessConfig": {
      "org": "karnoldf",
      "app": "serverless-capstone-app",
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "package": {
        "individually": true
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "app": "serverless-capstone-app",
    "org": "karnoldf",
    "layers": {},
    "isDashboardMonitoringPreconfigured": true,
    "isDashboardAppPreconfigured": true,
    "orgUid": "ce8db805-f85f-4ceb-bdd4-fda2d3c7b992",
    "appUid": "fc5FMphLB7rC2LmxVn"
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/serverless-capstone-app/dev/1640224442111-2021-12-23T01:54:02.111Z",
    "artifact": ""
  }
}